{"ast":null,"code":"var _jsxFileName = \"/home/dustin/CMPT436/project-parse/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport MainStack from \"./Stack/MainStack\";\nimport GlobalState from \"./contextAPI/globalState\";\nimport React, { useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport keys from \"./parse/Parse\";\nimport Parse from \"parse/react-native.js\";\nParse.setAsyncStorage(AsyncStorage);\nParse.initialize(keys.applicationId, keys.javascriptKey);\nParse.serverURL = keys.serverURL;\nexport default function App() {\n  useEffect(function () {\n    var createInstallation = function createInstallation() {\n      var Installation, installation;\n      return _regeneratorRuntime.async(function createInstallation$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Installation = Parse.Object.extend(Parse.Installation);\n              installation = new Installation();\n              installation.set(\"deviceType\", Platform.OS);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(installation.save());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    createInstallation();\n  }, []);\n  return React.createElement(GlobalState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(MainStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/dustin/CMPT436/project-parse/App.js"],"names":["MainStack","GlobalState","React","useEffect","AsyncStorage","keys","Parse","setAsyncStorage","initialize","applicationId","javascriptKey","serverURL","App","createInstallation","Installation","Object","extend","installation","set","Platform","OS","save"],"mappings":";;AAAA,OAAOA,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;SAC2CC,Y;AAC3C,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEAA,KAAK,CAACC,eAAN,CAAsBH,YAAtB;AACAE,KAAK,CAACE,UAAN,CAAiBH,IAAI,CAACI,aAAtB,EAAqCJ,IAAI,CAACK,aAA1C;AACAJ,KAAK,CAACK,SAAN,GAAkBN,IAAI,CAACM,SAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;AAE1BT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,cAAAA,YADiB,GACFR,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoBV,KAAK,CAACQ,YAA1B,CADE;AAEjBG,cAAAA,YAFiB,GAEF,IAAIH,YAAJ,EAFE;AAIvBG,cAAAA,YAAY,CAACC,GAAb,CAAiB,YAAjB,EAA+BC,QAAQ,CAACC,EAAxC;AAJuB;AAAA,+CAMjBH,YAAY,CAACI,IAAb,EANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;;AASAR,IAAAA,kBAAkB;AACrB,GAXQ,EAWN,EAXM,CAAT;AAaA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH","sourcesContent":["import MainStack from './Stack/MainStack'\nimport GlobalState from './contextAPI/globalState'\nimport React, {useEffect} from 'react';\nimport { Platform, StyleSheet, Text, View, AsyncStorage } from 'react-native';\nimport keys from './parse/Parse';\nimport Parse from \"parse/react-native.js\";\n\nParse.setAsyncStorage(AsyncStorage);\nParse.initialize(keys.applicationId, keys.javascriptKey);\nParse.serverURL = keys.serverURL;\n\nexport default function App() {\n\n    useEffect(() => {\n        const createInstallation = async () => {\n            const Installation = Parse.Object.extend(Parse.Installation);\n            const installation = new Installation();\n\n            installation.set(\"deviceType\", Platform.OS);\n\n            await installation.save();\n        }\n\n        createInstallation();\n    }, []);\n\n    return (\n        <GlobalState>\n            <MainStack/>\n        </GlobalState>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}