{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/dustin/CMPT436/project-parse/components/ChatRoomCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar ChatRoomCard = function (_React$Component) {\n  _inherits(ChatRoomCard, _React$Component);\n\n  var _super = _createSuper(ChatRoomCard);\n\n  function ChatRoomCard(props) {\n    _classCallCheck(this, ChatRoomCard);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(ChatRoomCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Message', {\n            roomID: _this.props.roomID\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.nameText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 55\n        }\n      }, this.props.otherUserName)), React.createElement(View, {\n        tyle: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.lastMsgText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 54\n        }\n      }, this.props.lastMsg)))));\n    }\n  }]);\n\n  return ChatRoomCard;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 20,\n    paddingHorizontal: 30,\n    flexDirection: 'column',\n    backgroundColor: '#FFFFFF',\n    width: Dimensions.get('window').width,\n    height: 100,\n    margin: 10,\n    borderBottomWidth: 0.5,\n    borderColor: \"#CFCFCF\",\n    borderStyle: \"solid\"\n  },\n  text: {\n    height: 30,\n    width: 200,\n    flexDirection: 'column'\n  },\n  nameText: {\n    fontWeight: \"400\",\n    color: \"black\",\n    fontSize: 20\n  },\n  lastMsgText: {\n    color: 'grey'\n  }\n});\nexport default ChatRoomCard;","map":{"version":3,"sources":["/home/dustin/CMPT436/project-parse/components/ChatRoomCard.js"],"names":["React","TouchableOpacity","ChatRoomCard","props","navigation","navigate","roomID","styles","container","text","nameText","otherUserName","lastMsgText","lastMsg","Component","StyleSheet","create","paddingTop","paddingHorizontal","flexDirection","backgroundColor","width","Dimensions","get","height","margin","borderBottomWidth","borderColor","borderStyle","fontWeight","color","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACRA,KADQ;AAEjB;;;;WAED,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACA,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C;AAACC,YAAAA,MAAM,EAAE,KAAI,CAACH,KAAL,CAAWG;AAApB,WAA1C,CAAN;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKP,KAAL,CAAWQ,aAA1C,CAA1B,CADR,EAEQ,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEJ,MAAM,CAACE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACK,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKT,KAAL,CAAWU,OAA7C,CAAzB,CAFR,CADJ,CADJ,CADJ;AAUH;;;;EAhBsBb,KAAK,CAACc,S;;AAoBjC,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,UAAU,EAAE,EADL;AAEPC,IAAAA,iBAAiB,EAAE,EAFZ;AAGPC,IAAAA,aAAa,EAAE,QAHR;AAIPC,IAAAA,eAAe,EAAE,SAJV;AAKPC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KALzB;AAMPG,IAAAA,MAAM,EAAE,GAND;AAOPC,IAAAA,MAAM,EAAE,EAPD;AAQPC,IAAAA,iBAAiB,EAAE,GARZ;AASPC,IAAAA,WAAW,EAAE,SATN;AAUPC,IAAAA,WAAW,EAAE;AAVN,GADkB;AAa7BnB,EAAAA,IAAI,EAAE;AACFe,IAAAA,MAAM,EAAE,EADN;AAEFH,IAAAA,KAAK,EAAE,GAFL;AAGFF,IAAAA,aAAa,EAAE;AAHb,GAbuB;AAkB7BT,EAAAA,QAAQ,EAAE;AACNmB,IAAAA,UAAU,EAAE,KADN;AAENC,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,QAAQ,EAAE;AAHJ,GAlBmB;AAuB7BnB,EAAAA,WAAW,EAAE;AACTkB,IAAAA,KAAK,EAAE;AADE;AAvBgB,CAAlB,CAAf;AA6BA,eAAe5B,YAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Dimensions} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\n\nclass ChatRoomCard extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return (\n            <View>\n                <TouchableOpacity onPress={() => this.props.navigation.navigate('Message', {roomID: this.props.roomID})}>\n                    <View style={styles.container}>\n                            <View style={styles.text}><Text style={styles.nameText}>{this.props.otherUserName}</Text></View>\n                            <View tyle={styles.text}><Text style={styles.lastMsgText}>{this.props.lastMsg}</Text></View>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingTop: 20,\n        paddingHorizontal: 30,\n        flexDirection: 'column',\n        backgroundColor: '#FFFFFF',\n        width: Dimensions.get('window').width,\n        height: 100,\n        margin: 10,\n        borderBottomWidth: 0.5,\n        borderColor: \"#CFCFCF\",\n        borderStyle: \"solid\",\n    },\n    text: {\n        height: 30,\n        width: 200,\n        flexDirection: 'column'\n    },\n    nameText: {\n        fontWeight: \"400\",\n        color: \"black\",\n        fontSize: 20,\n    },\n    lastMsgText: {\n        color: 'grey'\n    }\n\n})\n\nexport default ChatRoomCard\n"]},"metadata":{},"sourceType":"module"}