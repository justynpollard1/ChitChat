{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/dustin/CMPT436/project-parse/components/userSearch/GroupChatUserCard.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Context from \"../../contextAPI/context\";\n\nvar GroupChatUserCard = function (_React$Component) {\n  _inherits(GroupChatUserCard, _React$Component);\n\n  var _super = _createSuper(GroupChatUserCard);\n\n  function GroupChatUserCard(props) {\n    var _this;\n\n    _classCallCheck(this, GroupChatUserCard);\n\n    _this = _super.call(this, props);\n\n    _this.onAddUserPressed = function _callee() {\n      var users, snapshot, messageRooms, arr, i, idArray, ref, arr2, _i;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              users = db.collection('users');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(users.where('name', '==', _this.props.name).get());\n\n            case 3:\n              snapshot = _context.sent;\n              if (snapshot.empty) window.alert(\"userFound\");\n              snapshot.forEach(function (e) {\n                return _this.setState({\n                  uid: e.id\n                });\n              });\n              messageRooms = [];\n              arr = users.doc(_this.state.uid).get();\n\n              for (i = 0; i < arr.length; i++) {\n                messageRooms.push(arr[i]);\n              }\n\n              messageRooms.push(_this.state.roomID);\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(users.doc(_this.state.uid).update({\n                messageRooms: messageRooms\n              }));\n\n            case 12:\n              idArray = [];\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(db.collection('indivualChats').doc(_this.state.roomID).get());\n\n            case 15:\n              ref = _context.sent;\n              arr2 = ref.data().userIDs;\n\n              for (_i = 0; _i < arr2.length; _i++) {\n                idArray.push(arr2[_i]);\n              }\n\n              idArray.push(_this.state.uid);\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(db.collection('indivualChats').doc(_this.state.roomID).update({\n                userIDs: idArray\n              }));\n\n            case 21:\n              _this.setState({\n                uid: ''\n              });\n\n              _this.props.navigation.navigate('Message', {\n                roomID: _this.state.roomID\n              });\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userCardData: [],\n      roomID: _this.props.roomID,\n      uid: ''\n    };\n    return _this;\n  }\n\n  _createClass(GroupChatUserCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onAddUserPressed();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.nameText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 51\n        }\n      }, this.props.name)))));\n    }\n  }]);\n\n  return GroupChatUserCard;\n}(React.Component);\n\nGroupChatUserCard.contextType = Context;\nexport { GroupChatUserCard as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 20,\n    paddingHorizontal: 30,\n    flexDirection: 'column',\n    backgroundColor: '#FFFFFF',\n    width: Dimensions.get('window').width,\n    height: 100,\n    margin: 10,\n    borderBottomWidth: 0.5,\n    borderColor: \"#CFCFCF\",\n    borderStyle: \"solid\"\n  },\n  text: {\n    height: 30,\n    width: 200,\n    flexDirection: 'column'\n  },\n  nameText: {\n    fontWeight: \"400\",\n    color: \"black\",\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/home/dustin/CMPT436/project-parse/components/userSearch/GroupChatUserCard.js"],"names":["React","TouchableOpacity","Context","GroupChatUserCard","props","onAddUserPressed","users","db","collection","where","name","get","snapshot","empty","window","alert","forEach","e","setState","uid","id","messageRooms","arr","doc","state","i","length","push","roomID","update","idArray","ref","arr2","data","userIDs","navigation","navigate","userCardData","styles","container","text","nameText","Component","contextType","StyleSheet","create","paddingTop","paddingHorizontal","flexDirection","backgroundColor","width","Dimensions","height","margin","borderBottomWidth","borderColor","borderStyle","fontWeight","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, StyleSheet, Dimensions, Text} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Context from '../../contextAPI/context';\n\n\n\n\nexport default class GroupChatUserCard extends React.Component {\n    static contextType = Context\n    constructor(props){\n        super(props);\n        this.state={\n            userCardData: [],\n            roomID: this.props.roomID,\n            uid: ''\n        }\n    }\n    onAddUserPressed = async() => {\n        // find better way to get the users ID we clicked on\n        const users = db.collection('users');\n        const snapshot = await users.where('name', '==', this.props.name).get();\n        if(snapshot.empty) window.alert(\"userFound\")\n        snapshot.forEach(e => this.setState({\n            uid: e.id,\n        }))\n\n        // update the users chatroom\n        let messageRooms = []\n        const arr = users.doc(this.state.uid).get()\n        for (let i = 0; i < arr.length; i++){\n            messageRooms.push(arr[i]);\n        }\n        messageRooms.push(this.state.roomID);\n\n        await users.doc(this.state.uid).update({\n            messageRooms: messageRooms\n        });\n\n\n\n        // update the chatroom members\n        let idArray = [];\n        //get the array of maps from db\n        const ref = await db.collection('indivualChats').doc(this.state.roomID).get();\n        const arr2 = ref.data().userIDs;\n        for (let i = 0; i < arr2.length; i++){\n            idArray.push(arr2[i]);\n        }\n        idArray.push(this.state.uid);\n\n\n        //push array of maps back to db\n        await db.collection('indivualChats').doc(this.state.roomID).update({\n            userIDs: idArray\n        });\n        this.setState({\n            uid: '',\n        })\n\n\n\n        //add the room to the users messagesRooms\n        this.props.navigation.navigate('Message', {roomID: this.state.roomID})\n    };\n\n\n\n\n    render(){\n        return(\n            <View>\n                <TouchableOpacity onPress={() => this.onAddUserPressed()}>\n                    <View style={styles.container}>\n                        <View style={styles.text}><Text style={styles.nameText}>{this.props.name}</Text></View>\n                    </View>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        paddingTop: 20,\n        paddingHorizontal: 30,\n        flexDirection: 'column',\n        backgroundColor: '#FFFFFF',\n        width: Dimensions.get('window').width,\n        height: 100,\n        margin: 10,\n        borderBottomWidth: 0.5,\n        borderColor: \"#CFCFCF\",\n        borderStyle: \"solid\",\n    },\n    text: {\n        height: 30,\n        width: 200,\n        flexDirection: 'column'\n    },\n    nameText: {\n        fontWeight: \"400\",\n        color: \"black\",\n        fontSize: 20,\n    }\n})\n"]},"metadata":{},"sourceType":"module"}