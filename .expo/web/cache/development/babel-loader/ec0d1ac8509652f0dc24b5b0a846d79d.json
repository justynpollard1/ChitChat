{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/dustin/CMPT436/project-parse/views/Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Context from \"../contextAPI/context\";\nimport CurrentChatScroll from \"../components/CurrentChatsScroll\";\nimport { SearchBar } from 'react-native-elements';\nimport UserSearchScroll from \"../components/userSearch/UserSearchScroll\";\nimport { Parse } from \"parse/react-native\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n\n    _this.onSearchButtonClicked = function () {\n      _this.props.navigation.setOptions({\n        headerTitle: function headerTitle() {\n          return _this.userSearchBar();\n        },\n        headerRight: function headerRight() {\n          return null;\n        }\n      });\n    };\n\n    _this.searchForUser = function _callee() {\n      var usersFoundArray, currentUserId, allUserQuery, allUserQueryResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              usersFoundArray = [];\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Parse.User.current().id);\n\n            case 3:\n              currentUserId = _context.sent;\n              allUserQuery = new Parse.Query(Parse.Object.extend(\"User\"));\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(allUserQuery.find());\n\n            case 7:\n              allUserQueryResult = _context.sent;\n              allUserQueryResult.map(function (x) {\n                if (x.get('name').includes(_this.state.search) && x.get('uid') !== currentUserId) {\n                  usersFoundArray.push([x.get('name'), x.get('uid')]);\n                }\n              });\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return _this.setState({\n                  usersFound: usersFoundArray\n                }, function () {\n                  return resolve();\n                });\n              }));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.onCancelPressed = function () {\n      _this.setState({\n        searchBarShow: false,\n        search: ''\n      });\n    };\n\n    _this.state = {\n      searchBarShow: false,\n      search: '',\n      usersFound: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.searchBarShow === false) this.setLayout();else this.onSearchButtonClicked();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.searchBarShow === false) this.setLayout();else this.onSearchButtonClicked();\n    }\n  }, {\n    key: \"setLayout\",\n    value: function setLayout() {\n      var _this2 = this;\n\n      this.props.navigation.setOptions({\n        headerTitle: function headerTitle() {\n          return React.createElement(Button, {\n            onPress: function onPress() {\n              return _this2.setState({\n                searchBarShow: true\n              });\n            },\n            title: \"Search\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Button, {\n            onPress: function onPress() {\n              return _this2.props.navigation.navigate('Settings');\n            },\n            title: \"Settings\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"userSearchBar\",\n    value: function userSearchBar() {\n      var search = this.state.search;\n      return React.createElement(SearchBar, {\n        platform: \"ios\",\n        placeholder: \"Search for User\",\n        onChangeText: this.updateSearch,\n        onSubmitEditing: this.searchForUser,\n        onCancel: this.onCancelPressed,\n        value: search,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.searchBarShow === false) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, React.createElement(CurrentChatScroll, {\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, React.createElement(UserSearchScroll, {\n          navigation: this.props.navigation,\n          usersFound: this.state.usersFound,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nHome.contextType = Context;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  text: {\n    fontSize: 50,\n    color: 'blue'\n  }\n});\n;\nexport default Home;","map":{"version":3,"sources":["/home/dustin/CMPT436/project-parse/views/Home.js"],"names":["React","Context","CurrentChatScroll","SearchBar","UserSearchScroll","Parse","Home","props","onSearchButtonClicked","navigation","setOptions","headerTitle","userSearchBar","headerRight","searchForUser","usersFoundArray","User","current","id","currentUserId","allUserQuery","Query","Object","extend","find","allUserQueryResult","map","x","get","includes","state","search","push","Promise","resolve","setState","usersFound","updateSearch","onCancelPressed","searchBarShow","setLayout","navigate","styles","container","Component","contextType","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","text","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport Context from '../contextAPI/context';\nimport CurrentChatScroll from '../components/CurrentChatsScroll'\nimport { SearchBar } from 'react-native-elements';\nimport UserSearchScroll from '../components/userSearch/UserSearchScroll';\nimport { Parse } from \"parse/react-native\";\n\nclass Home extends React.Component {\n    static contextType = Context\n    constructor(props){\n        super(props)\n        this.state={\n            searchBarShow: false,\n            search: '',\n            usersFound: []\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.searchBarShow === false)this.setLayout();\n        else this.onSearchButtonClicked()\n    }\n    componentDidUpdate() {\n        if (this.state.searchBarShow === false)this.setLayout();\n        else this.onSearchButtonClicked()\n    }\n\n    //sets header for when search is clicked\n    onSearchButtonClicked = () => {\n        this.props.navigation.setOptions({\n            headerTitle: () => (\n                this.userSearchBar()\n            ),\n            headerRight: () => (null)\n        })\n    }\n\n    //sets normal layout of header\n    setLayout() {\n        this.props.navigation.setOptions({\n            headerTitle: () => (\n                <Button onPress={() => this.setState({searchBarShow: true})} title=\"Search\"/>\n            ),\n            headerRight: () => (\n                <Button onPress={() => this.props.navigation.navigate('Settings')} title=\"Settings\"/>\n            )\n        })\n\n    }\n\n    //gets search text and looks for users in db\n    searchForUser = async() => {\n        const usersFoundArray = []\n        const currentUserId = await Parse.User.current().id;\n        //get all users from the cloud\n        let allUserQuery = new Parse.Query(Parse.Object.extend(\"User\"));\n        let allUserQueryResult = await allUserQuery.find();\n\n        //get all the users that match the search criteria\n        allUserQueryResult.map(x => {\n            if (x.get('name').includes(this.state.search) && x.get('uid') !== currentUserId) {\n                usersFoundArray.push([x.get('name'), x.get('uid')])\n            }\n        });\n\n\n        await new Promise(resolve => this.setState({usersFound: usersFoundArray}, () => resolve()))\n    }\n\n    //updates search bar text and search state\n    updateSearch = search => {\n        this.setState({ search });\n    };\n\n    //hides search bar and sets search to empty\n    onCancelPressed = () => {\n        this.setState({searchBarShow: false, search: ''})\n    }\n\n    //Search bar render\n    userSearchBar() {\n        const {search} = this.state;\n        return (\n            <SearchBar\n                platform=\"ios\"\n                placeholder=\"Search for User\"\n                onChangeText={this.updateSearch}\n                onSubmitEditing={this.searchForUser}\n                onCancel={this.onCancelPressed}\n                value={search}\n                autoCapitalize='none'\n            />\n        )\n    }\n\n\n    render() {\n\n\n        if (this.state.searchBarShow===false) {\n            return (\n                <View style={styles.container}>\n                    <CurrentChatScroll navigation={this.props.navigation}/>\n                </View>\n            );\n        } else {\n            return (\n                <View style={styles.container}>\n                    <UserSearchScroll navigation={this.props.navigation} usersFound={this.state.usersFound}/>\n                </View>\n            )\n        }\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    text: {\n        fontSize: 50,\n        color: 'blue'\n    }\n});;\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}